[{"C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\index.js":"1","C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\reportWebVitals.js":"2","C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\App.js":"3","C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\API.js":"4","C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\Table.js":"5","C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\FilterInput.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":734,"mtime":1611169475669,"results":"10","hashOfConfig":"8"},{"size":140,"mtime":1611168389477,"results":"11","hashOfConfig":"8"},{"size":2354,"mtime":1611168869193,"results":"12","hashOfConfig":"8"},{"size":594,"mtime":1611168669545,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1p0bs0k",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\index.js",[],["29","30"],"C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\reportWebVitals.js",[],"C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\App.js",[],"C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\API.js",[],"C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\Table.js",["31"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst Table = ({ users }) => {\r\n  const [sortedUsers, updateSortedUsers] = useState([]);\r\n\r\n  useEffect(() => updateSortedUsers(users), [users]);\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">title</th>\r\n            <th\r\n              scope=\"col\"\r\n              onClick={() => {\r\n                const usersCopy = [...users];\r\n                const updateSort = usersCopy.sort((a, b) => {\r\n                  const nameA = a.name.first;\r\n                  const nameB = b.name.first;\r\n\r\n                  if (nameA < nameB) {\r\n                    return -1;\r\n                  }\r\n                  if (nameA > nameB) {\r\n                    return 1;\r\n                  }\r\n\r\n                  return 0;\r\n                });\r\n\r\n                updateSortedUsers(updateSort);\r\n              }}\r\n            >\r\n              First\r\n            </th>\r\n            <th scope=\"col\">Last</th>\r\n            <th scope=\"col\">gender</th>\r\n            <th scope=\"col\">email</th>\r\n            <th scope=\"col\">phone</th>\r\n            <th scope=\"col\">cell</th>\r\n            <th scope=\"col\">city</th>\r\n            <th scope=\"col\">state</th>\r\n            <th scope=\"col\">country</th>\r\n            <th scope=\"col\">postcode</th>\r\n            <th scope=\"col\">picture</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sortedUsers.map(\r\n            ({\r\n              location: { city, state, country, postcode },\r\n              picture: { thumbnail },\r\n              cell,\r\n              phone,\r\n              gender,\r\n              email,\r\n              name: { first, last, title },\r\n            }) => (\r\n              <tr key={email}>\r\n                <th>{first}</th>\r\n                <td>{last}</td>\r\n                <td>{gender}</td>\r\n                <td>{email}</td>\r\n                <td>{phone}</td>\r\n                <td>{cell}</td>\r\n                <td>{city}</td>\r\n                <td>{state}</td>\r\n                <td>{country}</td>\r\n                <td>{postcode}</td>\r\n                <td>\r\n                  <img src={thumbnail} />\r\n                </td>\r\n\r\n                <td></td>\r\n              </tr>\r\n            )\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","C:\\Users\\Christian Escherich\\my-app\\employee_app\\src\\FilterInput.js",["32"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst FilterInput = ({ users, updateUsers }) => {\r\n  const [inputValue, updateInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const filteredUsers =\r\n      inputValue === \"\"\r\n        ? users\r\n        : users.filter(\r\n            ({ name: { first } }) =>\r\n              first.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\r\n          );\r\n\r\n    updateUsers(filteredUsers);\r\n  }, [inputValue, users]);\r\n\r\n  return (\r\n    <input value={inputValue} onChange={e => updateInput(e.target.value)} />\r\n  );\r\n};\r\n\r\nexport default FilterInput;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":72,"column":19,"nodeType":"39","endLine":72,"endColumn":42},{"ruleId":"40","severity":1,"message":"41","line":16,"column":6,"nodeType":"42","endLine":16,"endColumn":25,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateUsers'. Either include it or remove the dependency array. If 'updateUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [inputValue, updateUsers, users]",{"range":"49","text":"50"},[440,459],"[inputValue, updateUsers, users]"]